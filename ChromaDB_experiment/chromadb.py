# -*- coding: utf-8 -*-
"""ChromaDB.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1qElXVAiMM0_6u8bBSQJgr2eK17EQk4uG
"""

!pip install chromadb

import chromadb
chroma_client = chromadb.Client()

collection = chroma_client.create_collection(name="my_collection01")

collection.add(
    documents=[
        "This is a document about Mangoes. This is a document about Bananas",
        " Welcome to Natural Language Processing  It is one of the most exciting research areas as of today  We will see how Python can be used to work with text files. "
    ],
    ids=["id1", "id2"]
)

results = collection.query(
    query_texts=["This is a query document about India"],
    n_results=2 # how many results to return
)
print(results)

results = collection.query(
    query_texts=["This is a query document about bananas"],
    n_results=2 # how many results to return
)
print(results)

#PERSISTING THE DATA:
client = chromadb.PersistentClient(path="/db/")

client.heartbeat()

from chromadb.config import DEFAULT_TENANT, DEFAULT_DATABASE, Settings

DEFAULT_TENANT,DEFAULT_DATABASE

client = chromadb.PersistentClient(
    path="/db2/",
    settings=Settings(
                is_persistent = True,
                persist_directory = "/db2/",
                allow_reset = True,
        anonymized_telemetry=False),
    tenant=DEFAULT_TENANT,
    database=DEFAULT_DATABASE,
)

client.reset()

#CREATING,INSPECTING AND DELETING COLLECTIONS

from chromadb.utils import embedding_functions
emb_fun=embedding_functions.SentenceTransformerEmbeddingFunction()

model_name = "all-MiniLM-L6-v2"
emb_fun = embedding_functions.SentenceTransformerEmbeddingFunction(model_name=model_name)

# embedding visualization:
emb_fun(["foo"])

len(emb_fun(["foo"])[0])

#CREATING NEW COLLECTION:
collection = client.create_collection(name="my_collection2", embedding_function=emb_fun)

#GETTING THE COLLECTION :
collection = client.get_collection(name="my_collection2", embedding_function=emb_fun)

#DELETING A COLLECTION :
# client.delete_collection(name="my_collection2")

#RENAMING THE COLLECTION:
collection.modify(name="new_name")

collection

#ADDING DATA(INSERT EMBEDDINGS):
collection.add(
    ids=["id1", "id2"],  # Unique IDs
    embeddings=[[0.1, 0.2, 0.3], [0.4, 0.5, 0.6]],  # Vector representations
    metadatas=[{"category": "A"}, {"category": "B"}],
    documents=["This is the first document.", "This is the second document."]
)

#RETRIEVING DATA:
result = collection.get(ids=["id1"])
print(result)

#SEARCHING QUERY BY SIMILARITY:
query_result = collection.query(
    query_embeddings=[[0.1, 0.2, 0.3]],
    n_results=2
)
print(query_result)

# UPDATING A RECORD IN COLLECTION :
collection.update(
    ids=["id1"],
    embeddings=[[0.9, 0.8, 0.7]],
    metadatas=[{"category": "Updated"}],
    documents=["Updated document content."]
)
print(collection.get(ids=["id1"]))

print(client.list_collections())

